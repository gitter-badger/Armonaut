# Copyright 2018 Seth Michael Larson
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Initial migration"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3d5123d18b73'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commits',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('hexsha', sa.String(), nullable=False),
    sa.Column('ref', sa.String(), nullable=False),
    sa.Column('author_github_id', sa.BigInteger(), nullable=True),
    sa.Column('author_name', sa.String(), nullable=False),
    sa.Column('author_email', sa.String(), nullable=False),
    sa.Column('message', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commits_hexsha'), 'commits', ['hexsha'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('github_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('owner', sa.String(length=255), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('webhook_id', sa.BigInteger(), nullable=True),
    sa.Column('webhook_secret', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner', name='uix_slug')
    )
    op.create_index(op.f('ix_projects_github_id'), 'projects', ['github_id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owner'), 'projects', ['owner'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('github_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.Text(), nullable=False),
    sa.Column('avatar_url', sa.Text(), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('joined_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_github_id'), 'users', ['github_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('builds',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'success', 'failure', 'error', name='status'), nullable=False),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sa.BigInteger(), nullable=False),
    sa.Column('commit_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['commit_id'], ['commits.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_builds_status'), 'builds', ['status'], unique=False)
    op.create_table('project_roles',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('role_type', sa.Enum('OWNER', 'COLLABORATOR', 'READ_ONLY', name='projectroletype'), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('project_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'success', 'failure', 'error', name='status'), nullable=False),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('config', postgresql.JSON(none_as_null=True, astext_type=sa.Text()), nullable=False),
    sa.Column('build_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['build_id'], ['builds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_table('project_roles')
    op.drop_index(op.f('ix_builds_status'), table_name='builds')
    op.drop_table('builds')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_github_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_projects_owner'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_github_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_commits_hexsha'), table_name='commits')
    op.drop_index(op.f('ix_commits_author_committed_at'), table_name='commits')
    op.drop_table('commits')
    # ### end Alembic commands ###
